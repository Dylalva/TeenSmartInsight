name: Deploy Infrastructure and Application

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "us-east-2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa_flaskapp
          chmod 600 ~/.ssh/id_rsa_flaskapp
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa_flaskapp.pub
          chmod 644 ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa_flaskapp.pub
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      - name: Terraform Init
        run: |
          cd infrastructure
          terraform init
        
      - name: Terraform Plan
        run: |
          cd infrastructure
          terraform plan

      - name: Terraform Apply
        id: terraform
        run: |
          cd infrastructure
          terraform apply -auto-approve
          PUBLIC_IP=$(terraform output -raw public_ip)
          echo "instance_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

      - name: Update hosts.ini with new IP
        run: |
          cd infrastructure
          echo "[app_servers]" > hosts.ini
          echo "${{ steps.terraform.outputs.instance_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa_flaskapp ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> hosts.ini

      - name: Wait for SSH to be available
        run: |
          # Esperar a que la instancia esté lista para conexiones SSH
          echo "Esperando a que la instancia esté lista para SSH..."
          for i in {1..30}; do
            if ssh -i ~/.ssh/id_rsa_flaskapp -o StrictHostKeyChecking=no -o ConnectTimeout=5 ubuntu@${{ steps.terraform.outputs.instance_ip }} 'echo SSH ready'; then
              echo "SSH está listo!"
              break
            fi
            echo "Intento $i: SSH aún no está listo, esperando..."
            sleep 10
          done

      - name: Run Ansible Playbook
        run: |
          cd infrastructure
          # Mostrar información de depuración
          echo "Contenido de hosts.ini:"
          cat hosts.ini
          echo "\nVerificando permisos de la clave SSH:"
          ls -la ~/.ssh/id_rsa_flaskapp
          # Ejecutar Ansible con modo verbose
          ansible-playbook -i hosts.ini deploy.yml -vv